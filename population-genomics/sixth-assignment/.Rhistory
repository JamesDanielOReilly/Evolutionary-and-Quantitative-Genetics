R
> install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
q()
install.packages("devtools")
cd ..
q()
# install DESeq2
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
BiocManager::install('EnhancedVolcano')
install.packages('pheatmap')
library(DESeq2)
library(ggplot2)
library(EnhancedVolcano)
library(pheatmap)
# read count matrix and metadata
setwd("/home/james/Documents/KULeuven/Bioinformatics/second_year/Evolutionary-and-Quantitative-Genetics/part-two/sixth-assignment")
# setwd("/home/james/Documents/leuven/second-year/Evolutionary-and-Quantitative-Genetics/part-two/sixth-assignment")
count_data <- read.table("count_data_exercise.txt", row.names = 1, header = T)
str(count_data)
design <- read.table("design.txt", row.names = 1, header = T)
design$treat <- factor(design$treat)
design$lat <- factor(design$lat)
group2<-factor(design$group2)
dds <- DESeqDataSetFromMatrix(countData = count_data,
colData = design,
design = ~ group2)
dds <- DESeq(dds)
# First apply a variance stabilizing transformation on dds
vsd=vst(dds)
# PCA
pcaDataDEG <- plotPCA(vsd,intgroup=c("treat","lat"),returnData=TRUE)
percentVar <- round(100 * attr(pcaDataDEG, "percentVar"))
ggplot(pcaDataDEG, aes(x = PC1, y = PC2, color = treat, shape = lat)) +
geom_point(size =3) +
xlab(paste0("PC1: ", percentVar[1], "% variance")) +
ylab(paste0("PC2: ", percentVar[2], "% variance")) +
coord_fixed()
# N24 vs N20
res_N24_vsN20 <- results(dds, contrast = c("group2", "N24", "N20"))
sig_N24_vsN20 <- res_N24_vsN20[ which(res_N24_vsN20$padj < 0.05 ), ]
# S24 vs S20
res_S24_vsS20 <- results(dds, contrast = c("group2", "S24", "S20"))
sig_S24_vsS20 <- res_S24_vsS20[ which(res_S24_vsS20$padj < 0.05 ), ]
# S24 vs N24
res_S24_vsN24 <- results(dds, contrast = c("group2", "S24", "N24"))
sig_S24_vsN24 <- res_S24_vsN24[ which(res_S24_vsN24$padj < 0.05 ), ]
# S20 vs N20
res_S20_vsN20 <- results(dds, contrast = c("group2", "S20", "N20"))
sig_S20_vsN20 <- res_S20_vsN20[ which(res_S20_vsN20$padj < 0.05 ), ]
plot.new()
plotMA(res_N24_vsN20, ylim=c(-2,2)) # do the same for the other contrasts
# Make a volcano plot
BiocManager::install('EnhancedVolcano')
# Make a volcano plot
plot.new()
EnhancedVolcano(res_N24_vsN20,
lab = rownames(res_N24_vsN20),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
install.packages("pheatmap")
# Make a heatmap with all DEGs
# Combine all unique differentially expressed genes (DEGs) for all contrasts
# (with unique = each DEG transcript ID occuring only once)
DEGs_N24_vsN20=rownames(sig_N24_vsN20)
DEGs_S24_vsS20=rownames(sig_S24_vsS20)
DEGs_S24_vsN24=rownames(sig_S24_vsN24)
DEGs_S20_vsN20=rownames(sig_S20_vsN20)
allDEGs<-c(DEGs_N24_vsN20,DEGs_S24_vsS20,DEGs_S24_vsN24,DEGs_S20_vsN20)
allDEGsUnique=unique(allDEGs)
select=allDEGsUnique
nt <- normTransform(dds) # defaults to log2(x+1)
log2.norm.counts <- assay(nt)[select,]
df <- as.data.frame(colData(dds)[,c("treat","lat","pop")])
pheatmap(log2.norm.counts, cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
# extract the names of the DEGs like this (do also for other contrasts)
write.table(DEGs_N24_vsN20,file="DEGs_N24_vsN20.txt",row.names=FALSE,col.names=FALSE, sep="\t", quote = FALSE)
https://bioinfogp.cnb.csic.es/tools/venny/
# It can also be useful to examine the counts of reads for a single gene across the groups.'
# A simple function for making this plot is plotCounts, which normalizes counts by sequencing depth and adds a pseudocount of 1/2 to allow for log scale plotting
# The counts are grouped by the variables in intgroup, where more than one variable can be specified.
# Here we specify the gene which had the smallest p value from the results table created above.
# You can select the gene to plot by rowname or by numeric index.
# example
d <- plotCounts(dds, gene=which.min(res_N24_vsN20$padj), intgroup="group2",
returnData=TRUE)
ggplot(d, aes(x=group2, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
# extract the names of the DEGs like this (do also for other contrasts)
write.table(DEGs_N24_vsN20, file="DEGs_N24_vsN20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsS20, file="DEGs_S24_vsS20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsN24, file="DEGs_S24_vsN24.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S20_vsN20, file="DEGs_S24_vsN24.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
plotMA(res_s24_vsS20, ylim=c(-2,2)) # do the same for the other contrasts
plotMA(res_S24_vsS20, ylim=c(-2,2)) # do the same for the other contrasts
plotMA(res_S24_vsN24, ylim=c(-2,2)) # do the same for the other contrasts
plotMA(res_S20_vsN20, ylim=c(-2,2)) # do the same for the other contrasts
# PCA
pcaDataDEG <- plotPCA(vsd,intgroup=c("treat","lat"),returnData=TRUE)
percentVar <- round(100 * attr(pcaDataDEG, "percentVar"))
ggplot(pcaDataDEG, aes(x = PC1, y = PC2, color = treat, shape = lat)) +
geom_point(size =3) +
xlab(paste0("PC1: ", percentVar[1], "% variance")) +
ylab(paste0("PC2: ", percentVar[2], "% variance")) +
coord_fixed()
plot.new()
EnhancedVolcano(res_S24_vsS20,
lab = rownames(res_S24_vsS20),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
plot.new()
EnhancedVolcano(res_N24_vsN20,
lab = rownames(res_N24_vsN20),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
plot.new()
EnhancedVolcano(res_S24_vsN24,
lab = rownames(res_S24_vsN24),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
plot.new()
EnhancedVolcano(res_S24_vsN24,
lab = rownames(res_S20_vsN20),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
plot.new()
EnhancedVolcano(res_S20_vsN20,
lab = rownames(res_S20_vsN20),
x = 'log2FoldChange',
y = 'padj',
labSize = 1.5)
pheatmap(log2.norm.counts, cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
# extract the names of the DEGs like this (do also for other contrasts)
write.table(DEGs_N24_vsN20, file="DEGs_N24_vs_N20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsS20, file="DEGs_S24_vs_S20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsN24, file="DEGs_S24_vs_N24.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
# extract the names of the DEGs like this (do also for other contrasts)
write.table(DEGs_N24_vsN20, file="DEGs_N24_vs_N20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsS20, file="DEGs_S24_vs_S20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S24_vsN24, file="DEGs_S24_vs_N24.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
write.table(DEGs_S20_vsN20, file="DEGs_S20_vs_N20.txt", row.names=FALSE, col.names=FALSE, sep="\t", quote = FALSE)
